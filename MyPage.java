
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class MyPage extends javax.swing.JFrame {
    Connection conn;
    ResultSet resultSet;
    PreparedStatement prepStatement;
    /**
     * Creates new form MyPage
     */
    public MyPage() {
        super("Home");
        initComponents();
        conn = javaConnect.ConnectDB();
        CallSavings();
        CallGoals();
        CallInvestment();
        
       
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Savings = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        savingsBal = new javax.swing.JTextField();
        transferButton = new javax.swing.JButton();
        Goals = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        goalsBal = new javax.swing.JTextField();
        Investment = new javax.swing.JPanel();
        createInvestment = new javax.swing.JButton();
        addAmount = new javax.swing.JButton();
        deleteAcc = new javax.swing.JButton();
        InvestmentPut = new javax.swing.JTextField();
        welcome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setEditable(false);
        jTextField1.setText("Balance");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        savingsBal.setEditable(false);
        savingsBal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savingsBalActionPerformed(evt);
            }
        });

        transferButton.setText("Transfer");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SavingsLayout = new javax.swing.GroupLayout(Savings);
        Savings.setLayout(SavingsLayout);
        SavingsLayout.setHorizontalGroup(
            SavingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SavingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addGroup(SavingsLayout.createSequentialGroup()
                        .addComponent(savingsBal, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addComponent(transferButton)))
                .addContainerGap())
        );
        SavingsLayout.setVerticalGroup(
            SavingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SavingsLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SavingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(savingsBal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transferButton))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Savings", Savings);

        jTextField3.setEditable(false);
        jTextField3.setText("Balance");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        goalsBal.setEditable(false);
        goalsBal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goalsBalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GoalsLayout = new javax.swing.GroupLayout(Goals);
        Goals.setLayout(GoalsLayout);
        GoalsLayout.setHorizontalGroup(
            GoalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GoalsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GoalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(GoalsLayout.createSequentialGroup()
                        .addComponent(goalsBal, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        GoalsLayout.setVerticalGroup(
            GoalsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GoalsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(goalsBal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Goals", Goals);

        createInvestment.setText("Invest");
        createInvestment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createInvestmentActionPerformed(evt);
            }
        });

        addAmount.setText("Add");
        addAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAmountActionPerformed(evt);
            }
        });

        deleteAcc.setText("Delete");
        deleteAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccActionPerformed(evt);
            }
        });

        InvestmentPut.setEditable(false);
        InvestmentPut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvestmentPutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InvestmentLayout = new javax.swing.GroupLayout(Investment);
        Investment.setLayout(InvestmentLayout);
        InvestmentLayout.setHorizontalGroup(
            InvestmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvestmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InvestmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createInvestment)
                    .addComponent(addAmount)
                    .addComponent(deleteAcc))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(InvestmentLayout.createSequentialGroup()
                .addComponent(InvestmentPut, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 49, Short.MAX_VALUE))
        );
        InvestmentLayout.setVerticalGroup(
            InvestmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvestmentLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(InvestmentPut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createInvestment)
                .addGap(18, 18, 18)
                .addComponent(addAmount)
                .addGap(18, 18, 18)
                .addComponent(deleteAcc)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Investment", Investment);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1)
                    .addComponent(welcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(welcome, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void savingsBalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savingsBalActionPerformed
        // TODO add your handling code here:
        
        /*try {
            
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //Statement stmt2 = conn.createStatement();
                //Executing Statement.
                resultSet = stmt.executeQuery("select SavingsBal from Balance where Username = 'Pooven'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                if(resultSet.next()){
                    setVisible(false);
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    int savingsBalance = resultSet.getInt("SavingsBal");
                    String savBal = Integer.toString(savingsBalance);
                    savingsBal.setText(savBal);
                    System.out.println(savBal);
                    
                   
                    
                    
                    
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect credential");
                }
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } */
        
        try {
 
            // SQL command data stored in String datatype
            String sql = "select SavingsBal from Balance where Username = 'Pooven'";
            prepStatement = conn.prepareStatement(sql);
            resultSet = prepStatement.executeQuery();
 
            // Condition check
            while (resultSet.next()) {
 
                int savingsBalance = resultSet.getInt("SavingsBal");
                System.out.println(savingsBalance);
                String savBal = Integer.toString(savingsBalance);
                savingsBal.setText(savBal);
                
            }
        }
 
        // Catch block to handle exception
        catch (SQLException e) {
 
            // Print exception pop-up on screen
            System.out.println(e);
        }
 
        
    }//GEN-LAST:event_savingsBalActionPerformed

    public void CallSavings() {
        try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //Statement stmt2 = conn.createStatement();
                
                //Executing Statement.
                resultSet = stmt.executeQuery("select SavingsBal from Balance where Username = 'Pooven'");
                //resultSet1 = stmt.executeQuery("select SavingsBal from Balance where Username = '"+userN+"'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                if(resultSet.next()){
                    setVisible(false);
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    int savingsBalance = resultSet.getInt("SavingsBal");
                    System.out.println(savingsBalance);
                    String savBal = Integer.toString(savingsBalance);
                    savingsBal.setText(savBal);

                    
                    resultSet.close();
                    stmt.close();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect credential");
                }
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } 
    }
    
    public void CallGoals() {
        try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //Statement stmt2 = conn.createStatement();
                
                //Executing Statement.
                resultSet = stmt.executeQuery("select GoalsBal from Balance where Username = 'Pooven'");
                //resultSet1 = stmt.executeQuery("select SavingsBal from Balance where Username = '"+userN+"'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                if(resultSet.next()){
                    setVisible(false);
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    int goalsBalance = resultSet.getInt("GoalsBal");
                    String goal = Integer.toString(goalsBalance);
                    goalsBal.setText(goal);

                    
                    resultSet.close();
                    stmt.close();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect credential");
                }
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } 
    }
    
    public void CallInvestment() {
        try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //Statement stmt2 = conn.createStatement();
                
                //Executing Statement.
                resultSet = stmt.executeQuery("select InvestmentBalance from Investment where Username = 'Pooven'");
                //resultSet1 = stmt.executeQuery("select SavingsBal from Balance where Username = '"+userN+"'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                if(resultSet.next() && resultSet != null){
                    setVisible(false);
                    createInvestment.setVisible(false);
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    int invBalance = resultSet.getInt("InvestmentBalance");
                    System.out.println(invBalance);
                    String invBalances = Integer.toString(invBalance);
                    InvestmentPut.setText("You have invested " + invBalances);
                    InvestmentPut.setVisible(true);

                    
                    resultSet.close();
                    stmt.close();
                }
                else{
                    //JOptionPane.showMessageDialog(null, "Incorrect credential");
                    InvestmentPut.setVisible(false);
                }
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } 
    }
    
    
    
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void goalsBalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goalsBalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goalsBalActionPerformed

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Transfer ob = new Transfer();
        ob.setVisible(true);
        
        
        
    }//GEN-LAST:event_transferButtonActionPerformed

    private void createInvestmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createInvestmentActionPerformed
        // TODO add your handling code here:
        try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //Statement stmt2 = conn.createStatement();
                
                //Executing Statement.
                //resultSet = stmt.executeQuery("select GoalsBal from Balance where Username = 'Pooven'");
                stmt.executeUpdate("insert into Investment values('Pooven','0')");
                //resultSet1 = stmt.executeQuery("select SavingsBal from Balance where Username = '"+userN+"'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                
                //setVisible(false);
                JOptionPane.showMessageDialog(null, "Investment Account created");
                createInvestment.setVisible(false);
                //Investmen
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    //int goalsBalance = resultSet.getInt("GoalsBal");
                   // String goal = Integer.toString(goalsBalance);
                    //goalsBal.setText(goal);

                    
                    
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } 
    }//GEN-LAST:event_createInvestmentActionPerformed

    private void addAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAmountActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        TransferInvestment ob = new TransferInvestment();
        ob.setVisible(true);
    }//GEN-LAST:event_addAmountActionPerformed

    private void deleteAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccActionPerformed
        // TODO add your handling code here:
        try {
            // connect way #1
            String url1 = "jdbc:mysql://localhost:3306/bank_management_database";
            String user = "root";
            String password = "";

            conn = DriverManager.getConnection(url1, user, password);
            if (conn != null) {
                //System.out.println("Connected to the database ecommerce");

                Statement stmt = conn.createStatement();
                //int select = "Select InvestmentBalance where username = 'Pooven'";
                //Statement stmt2 = conn.createStatement();
                
                //Executing Statement.
                //resultSet = stmt.executeQuery("select GoalsBal from Balance where Username = 'Pooven'");
                stmt.executeUpdate("update Balance "
                        + "set SavingsBal = SavingsBal + (Select InvestmentBalance from Investment where Username = 'Pooven') "
                                + "where Username = 'Pooven'");
                
                stmt.executeUpdate("delete from Investment where username = 'Pooven'");
                //resultSet1 = stmt.executeQuery("select SavingsBal from Balance where Username = '"+userN+"'");
                //stmt2.executeUpdate("insert into `History` values('"+userN+"')");
                
                //setVisible(false);
                JOptionPane.showMessageDialog(null, "Investment Account deleted");
                createInvestment.setVisible(true);
                InvestmentPut.setVisible(false);
                    //Loading ob = new Loading();
                    //ob.setUpLoading();
                    //ob.setVisible(true);
                    
                    //int goalsBalance = resultSet.getInt("GoalsBal");
                   // String goal = Integer.toString(goalsBalance);
                    //goalsBal.setText(goal);

                    
                    
            }
                
        } catch (SQLException ex) {
            System.out.println("An error occurred. Maybe user/password is invalid");

        } 
        
    }//GEN-LAST:event_deleteAccActionPerformed

    private void InvestmentPutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvestmentPutActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_InvestmentPutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyPage().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Goals;
    private javax.swing.JPanel Investment;
    public javax.swing.JTextField InvestmentPut;
    public javax.swing.JPanel Savings;
    private javax.swing.JButton addAmount;
    public javax.swing.JButton createInvestment;
    private javax.swing.JButton deleteAcc;
    public javax.swing.JTextField goalsBal;
    public javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    public javax.swing.JTextField savingsBal;
    private javax.swing.JButton transferButton;
    public javax.swing.JLabel welcome;
    // End of variables declaration//GEN-END:variables


    
}
